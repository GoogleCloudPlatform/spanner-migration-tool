--
-- PostgreSQL database dump
--

-- Dumped from database version 9.6.18
-- Dumped by pg_dump version 12.3 (Debian 12.3-1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

--
-- Name: Types; Type: TABLE; Schema: public; Owner: postgres
--
-- PostgreSQL type name     | Spanner type | Printed in schema | Comment
-- BOOL                     | BOOL         | BOOL              | bool is an alias for boolean type
-- BIGINT (8 bytes)         | INT64        | INT8              |
-- BYTEA                    | BYTES(MAX)   | BYTEA             |
-- INT (same as INTEGER)    | INT64        | INT8              |
-- INTEGER (4 bytes)        | INT64        | INT8              |
-- INT8 (8 bytes)           | INT64        | INT8              |
-- PG_CATALOG.INT8          | INT64        | INT8              |
-- DECIMAL                  | PG.NUMERIC   | NUMERIC           | decimal is an alias for numeric type
-- NUMERIC                  | PG.NUMERIC   | NUMERIC           |
-- DOUBLE PRECISION         | DOUBLE       | FLOAT8            | 15 decimal digits precision
-- FLOAT8                   | DOUBLE       | FLOAT8            | float8 is an alias for double precision type
-- CHARACTER VARYING        | STRING(MAX)  | VARCHAR           |
-- TEXT                     | STRING(MAX)  | VARCHAR           |
-- VARCHAR                  | STRING(MAX)  | VARCHAR           | varchar is an alias for character varying type
-- TIMESTAMPTZ              | TIMESTAMP    | TIMESTAMPTZ       | timestamptz is an alias for 'timestamp with time zone' type
-- TIMESTAMP WITH TIME ZONE | TIMESTAMP    | TIMESTAMPTZ       |
--

-- Commentary on NUMERIC and PG.NUMERIC types --
-- GoogleSQL's NUMERIC type is fixed precision and scale (precision=38, scale=9).
-- Whereas, PostgreSQL's NUMERIC can be user-defined precision and scale
-- e.g., Numeric(100, 60) or arbitary precision (precision=147455, scale=16383).
-- For PG, HB converts to PGNumeric type which also has arbitrary precision.

CREATE TABLE public.types (
    bigint_col bigint NOT NULL,
    int_col int NOT NULL,
    integer_col integer,
    int8_col int8,
    c_double_precision double precision,
    c_float8 float8
);

ALTER TABLE public.types OWNER TO postgres;

-- TODO: Add support for converting numeric(20,15) to PG.NUMERIC(20,15) type in
-- HB. As of this writing, PG doesn't support precision qualifiers in schema.
CREATE TABLE public.types2 (
    c_int8    int8,
    c_boolean  boolean,
    c_bool  bool,
    c_bytea  bytea,
    c_numeric  numeric,
    c_numeric_n  numeric(20,15), -- This will translate to numeric today. See TODO above.
    c_decimal  decimal
);

ALTER TABLE public.types2 OWNER TO postgres;

CREATE TABLE public.types3 (
    c_timestamp_with_time_zone timestamp with time zone,
    c_timestamptz timestamptz
);

ALTER TABLE public.types3 OWNER TO postgres;

CREATE TABLE public.string_types (
    c_character_varying character varying,
    c_character_varying_n  character varying(50),
    c_text text,
    c_varchar  varchar,
    c_varchar_n  varchar(50)
);

ALTER TABLE public.string_types OWNER TO postgres;

CREATE TABLE public.unsupported_types (
    c_int8    int8,
    c_int8_arr int8 array, -- converted to string type in both schema and data
    c_date date, -- converted to string type in both schema and data
    c_timestamp_without_time_zone timestamp without time zone -- converted to timestamptz, local timezone assumed
);

ALTER TABLE public.unsupported_types OWNER TO postgres;

--
-- Name: cart; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cart (
    user_id character varying(20) NOT NULL,
    product_id character varying(20) NOT NULL,
    quantity bigint,
    last_modified timestamp without time zone
);

ALTER TABLE public.cart OWNER TO postgres;

--
-- Name: products; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.products (
    product_id character varying(20) NOT NULL,
    description character varying(1000),
    price numeric(10,2),
    date_added date
);


ALTER TABLE public.products OWNER TO postgres;

--
-- Data for Name: types; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.types (bigint_col, int_col, integer_col, int8_col, c_double_precision, c_float8) FROM stdin;
1	2	3	4	1234.5678	1234.5678
-9223372036854775807	-2147483647	-2147483647	-9223372036854775807	1E-307	1E-307
9223372036854775807	2147483647	2147483647	9223372036854775807	1E+308	1E+308
\.

--
-- Data for Name: types2; Type: TABLE DATA; Schema: public; Owner: postgres
--
-- TODO 1: Check if `\\x0001beef` getting converted to Bytea with value `AAG+7w==` is correct.
--
-- TODO 2: c_pg_numeric is intentionally out of range for GoogleSQL's Numeric
-- which has (precision=38, scale=9) and thus is a good test that this gets
-- cast as PG.Numeric type which is arbitary precision.
--

COPY public.types2 (c_int8, c_boolean, c_bool, c_bytea, c_numeric, c_numeric_n, c_decimal) FROM stdin;
1	true	false	\\x0001beef	444.9876	122333.444455555666666	111.2345
\.

--
-- Data for Name: types3; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.types3 (c_timestamp_with_time_zone, c_timestamptz) FROM stdin;
2019-10-29 05:30:00+10:30	2019-10-29 05:30:00+10:30
2019-10-29 05:30:00	2019-10-29 05:30:00
\.

--
-- Data for Name: unsupported_types; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.unsupported_types (c_int8, c_int8_arr, c_date, c_timestamp_without_time_zone) FROM stdin;
1	{42,6}	2019-10-29	2019-10-29 05:30:00
\.

--
-- Data for Name: string_types; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.string_types (c_character_varying, c_character_varying_n, c_text, c_varchar, c_varchar_n) FROM stdin;
character_varying text	character_varying_n text	c_text text	c_varchar text	c_varchar_n text
\.

--
-- Data for Name: cart; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.cart (user_id, product_id, quantity, last_modified) FROM stdin;
901e-a6cfc2b502dc	abc-123	1	2020-07-20 05:10:26
901e-a6cfc2b502dc	axd-673	2	2020-07-20 05:10:43
a86b-82493320a775	zxi-631	-5	2020-07-20 05:10:46
\.

--
-- Data for Name: products; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.products (product_id, description, price, date_added) FROM stdin;
abc-123	Blue suede shoes	141.99	2020-06-06
axd-673	Antique typewriter	99.99	2020-06-07
zxi-631	Glass vase	55.50	2020-06-10
\.

--
-- Name: types types_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.types
    ADD CONSTRAINT types_pkey PRIMARY KEY (bigint_col, int_col);

--
-- Name: types types2_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.types2
    ADD CONSTRAINT types2_pkey PRIMARY KEY (c_int8);

--
-- Name: types types3_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.types3
    ADD CONSTRAINT types3_pkey PRIMARY KEY (c_timestamp_with_time_zone);

--
-- Name: types unsupported_types_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.unsupported_types
    ADD CONSTRAINT unsupported_types_pkey PRIMARY KEY (c_int8);

--
-- Name: string_types string_types_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.string_types
    ADD CONSTRAINT string_types_pkey PRIMARY KEY (c_character_varying);

--
-- Name: cart cart_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cart
    ADD CONSTRAINT cart_pkey PRIMARY KEY (user_id, product_id);


--
-- Name: products products_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products
    ADD CONSTRAINT products_pkey PRIMARY KEY (product_id);

--
-- Name: albums; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.albums (
    singerid bigint NOT NULL,
    albumid bigint NOT NULL,
    albumtitle text,
    releasedate date
);


ALTER TABLE public.albums OWNER TO postgres;

--
-- Name: singers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.singers (
    singerid bigint NOT NULL,
    firstname text,
    lastname text,
    birthdate date
);


ALTER TABLE public.singers OWNER TO postgres;

--
-- Name: songs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.songs (
    singerid bigint NOT NULL,
    albumid bigint NOT NULL,
    trackid bigint NOT NULL,
    songname text
);


ALTER TABLE public.songs OWNER TO postgres;

--
-- Data for Name: albums; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.albums (singerid, albumid, albumtitle, releasedate) FROM stdin;
1	1	Total Junk	2014-03-02
1	2	Go Go Go	2011-02-09
2	1	Green	2012-09-17
2	2	Forever Hold Your Peace	2010-10-15
2	3	Terrified	2008-06-07
3	1	Nothing To Do With Me	2014-04-29
4	1	Play	2013-12-21
\.


--
-- Data for Name: singers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.singers (singerid, firstname, lastname, birthdate) FROM stdin;
1	Marc	Richards	1970-09-03
2	Catalina	Smith	1990-08-17
3	Alice	Trentor	1991-10-02
4	Lea	Martin	1991-11-09
5	David	Lomond	1977-01-29
\.


--
-- Data for Name: songs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.songs (singerid, albumid, trackid, songname) FROM stdin;
2	1	1	Let's Get Back Together
2	1	3	I Knew You Were Magic
2	1	6	Nothing Is The Same
2	1	7	The Second Time
2	3	1	Fight Story
3	1	1	Not About The Guitar
2	1	2	Starting Again
2	1	5	Blue
2	1	4	42
\.


--
-- Name: albums albums_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.albums
    ADD CONSTRAINT albums_pkey PRIMARY KEY (singerid, albumid);


--
-- Name: singers singers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.singers
    ADD CONSTRAINT singers_pkey PRIMARY KEY (singerid);


--
-- Name: songs songs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.songs
    ADD CONSTRAINT songs_pkey PRIMARY KEY (singerid, albumid, trackid);

--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: cloudsqlsuperuser
--

REVOKE ALL ON SCHEMA public FROM cloudsqladmin;
REVOKE ALL ON SCHEMA public FROM PUBLIC;
GRANT ALL ON SCHEMA public TO cloudsqlsuperuser;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

